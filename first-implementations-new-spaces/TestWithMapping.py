from firedrake import *

mesh = UnitSquareMesh(1, 1)
mesh = ExtrudedMesh(mesh, 1)
horiz_h = FiniteElement("RT", triangle, 1)
horiz_v = FiniteElement("DG", interval, 0)
horiz = TensorProductElement(horiz_h, horiz_v)
vert_h = FiniteElement("DG", triangle, 0)
vert_v = FiniteElement("CG", interval, 1)
vert = TensorProductElement(vert_h, vert_v)
horiz_hdiv = HDivElement(horiz)
vert_hdiv = HDivElement(vert)
vert_hdiv_broken = BrokenElement(vert_hdiv)
full = EnrichedElement(horiz_hdiv, vert_hdiv_broken)
Vorig = FunctionSpace(mesh, full)
remapped = WithMapping(full, "identity")
V = FunctionSpace(mesh, remapped)
v = TestFunction(V)
vo = TestFunction(Vorig)
print(assemble(v[1]*dx).dat.data)
print(assemble(vo[1]*dx).dat.data)